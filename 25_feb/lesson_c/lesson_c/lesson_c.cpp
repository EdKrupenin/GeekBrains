// lesson_c.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.

#include <iostream>
#include "ExternalSource.h"

int main()
{
	//Написать программу, вычисляющую выражение a * (b + (c / d)) и выводящую результат с плавающей точкой, где a, b, c, d – целочисленные константы;
	int a, b, c, d;
	a = 1;
	b = 2;
	c = 6;
	d = 4;
	std::cout << (a * (b + (static_cast<float>(c) / d))) << std::endl << std::endl;;

	//Дано целое число, выведите на экран разницу между этим числом и числом 21. Если же заданное число больше, чем 21, 
	//необходимо вывести удвоенную разницу между этим числом и 21. При выполнении задания следует использовать тернарный оператор.
	//if number == 21 то будет 0 в любом случае
	int number = 22;
	std::cout << ((number > 21) ? ((number - 21) * 2) : (21 - number)) << std::endl << std::endl;;

	//Написать программу, вычисляющую выражение из первого задания, а переменные для неё инициализировать в другом файле
	std::cout << (q * (w + (static_cast<float>(e) / r))) << std::endl << std::endl;;

	//Описать трёхмерный целочисленный массив, размером 3х3х3, указатель на значения внутри массива и при помощи операции
	//разыменования вывести на экран значение центральной ячейки получившегося куба [1][1][1]
	int mass[3][3][3];
	for (size_t i = 0; i < 3; i++){
		for (size_t j = 0; j < 3; j++){
			for (size_t k = 0; k < 3; k++){
				mass[i][j][k] = rand() % 100; // от 0 до 99
			}
		}
	}

	for (size_t i = 0; i < 3; i++){
		for (size_t j = 0; j < 3; j++){
			for (size_t k = 0; k < 3; k++){
				std::cout << mass[i][j][k] << " ";
			}
			std::cout << std::endl;
		}
		std::cout << std::endl;
	}

	int* ponterMass;
	ponterMass = mass[0][0];
	int*** ponter2 = (int***)&mass[0];
	//3*3 - проход по i получим mass[1][0][0]
	//+3 - проход по j получим mass[1][1][0]
	//+1 - проход по K получим mass[1][1][1]
	std::cout << ***ponter2 << " ";
	std::cout << mass[1][1][1] << " ";

}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
